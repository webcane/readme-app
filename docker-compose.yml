version: '3'

volumes:
  db-data:
  prometheus-data:
  grafana-data:

services:
  db:
    image: postgres:14.5
    hostname: readme-app-db
    container_name: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"
    #    env_file:
    #      - 'config/database.yml'
    environment:
      - POSTGRES_PASSWORD=$SPRING_DATASOURCE_PASSWORD
      - POSTGRES_USER=$SPRING_DATASOURCE_USERNAME
      - POSTGRES_DB=readmeapp_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  app:
    image: 'webcane/readme-app-spring:latest'
    hostname: readme-app-api
    container_name: spring
    build:
      context: .
    expose:
      - 8080
      - 5005
    ports:
      - "8080:8080" #api
      - "5005:5005" #debug
    restart: always
    environment:
      - APP_AUTH_TOKEN_SECRET=$APP_AUTH_TOKEN_SECRET
      - SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/readmeapp_db
      - SPRING_DATASOURCE_USERNAME=$SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID=$SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET=$SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET
      - MANAGEMENT_METRICS_TAGS_APPLICATION=$MANAGEMENT_METRICS_TAGS_APPLICATION
    #env_file:
        #      - .env
    depends_on:
      - db

  ui:
    image: 'webcane/readme-app-angular:latest'
    hostname: readme-app-ui
    container_name: angular
    build:
      context: ./angular
      args:
        BUILD_CMD: build
    expose:
      - "80"
    ports:
      - "4200:80"
    restart: always
    volumes:
      - type: bind
        source: ./angular/src/assets/config/envConfig.json
        target: /assets/config/envConfig.json
    depends_on:
      - app

  prometheus:
    image: 'prom/prometheus'
    hostname: readme-app-prometheus
    container_name: prometheus
    volumes:
      - ./env/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml


  grafana:
    image: 'grafana/grafana'
    hostname: readme-app-grafana
    container_name: grafana
    volumes:
      - ./env/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    ports:
      - "3100:3100"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3100