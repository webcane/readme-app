nameOverride: ""
fullnameOverride: ""

app:
  name: readme-app-api
  replicaCount: 1
  image:
    repository: webcane/readme-app-spring
    # "Always"
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  nameOverride: ""
  configs:
    # DEBUG: true
    APP_OAUTH2_AUTHORIZEDREDIRECTURIS: ["http://kubernetes.docker.internal/oauth2/redirect"]
  secrets:

ui:
  name: readme-app-ui
  replicaCount: 1
  image:
    repository: webcane/readme-app-angular
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 4200
    targetPort: 80
  nameOverride: ""
  #Angular related configuration
  configuration:
    authProvider: github
    apiUrl: "http://kubernetes.docker.internal/api"
    oauth2RedirectUri: "http://kubernetes.docker.internal/oauth2/redirect"
    githubAuthUrl: "http://kubernetes.docker.internal/api/oauth2/authorization/github?redirect_uri=http://kubernetes.docker.internal/oauth2/redirect"


## Postgres chart configuration
## https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  ## Whether to deploy the Postgres Chart or not
  enabled: true
  auth:
    database: readmeapp_db
#    password:
#    postgresPassword:
    username: app_user


ingress:
  enabled: true
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: nginx
  # nginx.ingress.kubernetes.io/rewrite-target: /$2
  # nginx.ingress.kubernetes.io/use-regex: "true"
  # nginx.ingress.kubernetes.io/add-base-url: "true"
  hosts:
    - host: kubernetes.docker.internal
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local