nameOverride: ""
fullnameOverride: ""

app:
  name: readme-app-api
  replicaCount: 1
  image:
    repository: webcane/readme-app-spring
    # "Always"
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  nameOverride: ""
  #Spring related configuration
  configuration:
    # debug: true
    app:
      auth:
        tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
        tokenExpirationMsec: 864000000
      oauth2:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
          - http://kubernetes.docker.internal/oauth2/redirect
    server:
      port: 8080
      servlet:
        context-path: /api
      error:
        whitelabel:
          enabled: false
    logging:
      level:
        org.hibernate.sql: INFO
        org.springframework: INFO
        cane.brothers: DEBUG
    spring:
      profiles:
        active: management,oauth2,openapi
      devtools:
        restart:
          enabled: false
      datasource:
        username: postgres
        password: postgres
#        initialization-mode: always
#        driver-class-name: org.postgresql.Driver
      jpa:
        show-sql: true
        generate-ddl: true
#        open-in-view: false
        hibernate:
          ddl-auto: create-drop #update #validate
      security:
        oauth2:
          client:
            registration:
              github:
                clientId: 0672f053e54345b9fdbd
                clientSecret: 5ad5c27fd08fd85635b4ab8960e1db8588e90084
                redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
                scope:
                  - user:email
                  - read:user
    management:
      endpoint:
        httptrace:
          enabled: false
      endpoints:
        web:
          base-path: /management
          exposure:
            include: '*' #, env, httptrace, routes, beans

ui:
  name: readme-app-ui
  replicaCount: 1
  image:
    repository: webcane/readme-app-angular
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 4200
    targetPort: 80
  nameOverride: ""
  #Angular related configuration
  configuration:
    authProvider: github
    apiUrl: http://kubernetes.docker.internal/api
    oauth2RedirectUri: http://kubernetes.docker.internal/oauth2/redirect
    githubAuthUrl: http://kubernetes.docker.internal/api/oauth2/authorization/github?redirect_uri=http://kubernetes.docker.internal/oauth2/redirect


## Postgres chart configuration
## https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml

postgresql:
  ## Whether to deploy the Postgres Chart or not
  enabled: true
  ## PostgreSQL service configuration
  service:
    port: 5432
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  postgresqlDatabase: readmeapp_db
#  postgresqlConfiguration:
  ## Disable Postgres Persistence
#  persistence:
#    enabled: false
#  initdbScripts:
#db:
#  name: readme-app-db
#  replicaCount: 1
#  image: postgres:13.1-alpine
#  port: 5432

ingress:
  enabled: true
  annotations:
  # nginx.ingress.kubernetes.io/rewrite-target: /$2
  # nginx.ingress.kubernetes.io/use-regex: "true"
  # nginx.ingress.kubernetes.io/add-base-url: "true"
  hosts:
    - host: kubernetes.docker.internal
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local