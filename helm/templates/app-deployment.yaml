apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  labels:
    {{- include "app.selectorLabels" . | nindent 4 }}
    {{- include "readme-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: spring
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: "app"
              containerPort: {{ .Values.app.service.targetPort }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ template "readme-app.name" . }}-env
            - secretRef:
                name: {{ template "readme-app.name" . }}-env
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "readme-app.name" . }}-postgresql
                  key: password
            - name: SPRING_DATASOURCE_USERNAME
              value: "{{ .Values.postgresql.auth.username }}"
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Release.Name }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.postgresql.containerPorts.postgresql }}/{{ .Values.postgresql.auth.database }}"
